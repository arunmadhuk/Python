# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'd:\python\tms_log\tms_log_reader.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import *
from PyQt5.QtGui import *
from PyQt5.QtWidgets import *


class LogReaderUI(QMainWindow):

    def __init__(self):
        super(LogReaderUI, self).__init__()
        self.setupUi()

    def setupUi(self):
        # LogReaderUI.setObjectName("LogReaderUI")
        self.resize(936, 853)
        self.centralwidget = QtWidgets.QWidget(self)
        self.centralwidget.setObjectName("centralwidget")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(10, 20, 921, 821))
        self.widget.setObjectName("widget")
        self.gridLayout = QtWidgets.QGridLayout(self.widget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setSpacing(5)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.lbl_filter_option = QtWidgets.QLabel(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lbl_filter_option.sizePolicy().hasHeightForWidth())
        self.lbl_filter_option.setSizePolicy(sizePolicy)
        self.lbl_filter_option.setObjectName("lbl_filter_option")
        self.horizontalLayout.addWidget(self.lbl_filter_option)
        self.cmbbx_filter_option = QtWidgets.QComboBox(self.widget)
        self.cmbbx_filter_option.setObjectName("cmbbx_filter_option")
        self.horizontalLayout.addWidget(self.cmbbx_filter_option)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.lbl_start_date = QtWidgets.QLabel(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lbl_start_date.sizePolicy().hasHeightForWidth())
        self.lbl_start_date.setSizePolicy(sizePolicy)
        self.lbl_start_date.setObjectName("lbl_start_date")
        self.horizontalLayout.addWidget(self.lbl_start_date)
        self.dt_start_date = QtWidgets.QDateEdit(self.widget)
        self.dt_start_date.setObjectName("dt_start_date")
        self.dt_start_date.setDisplayFormat("dd MMM yyyy")
        self.horizontalLayout.addWidget(self.dt_start_date)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem1)
        self.lbl_end_date = QtWidgets.QLabel(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lbl_end_date.sizePolicy().hasHeightForWidth())
        self.lbl_end_date.setSizePolicy(sizePolicy)
        self.lbl_end_date.setObjectName("lbl_end_date")
        self.horizontalLayout.addWidget(self.lbl_end_date)
        self.dt_end_date = QtWidgets.QDateEdit(self.widget)
        self.dt_end_date.setObjectName("dt_end_date")
        self.dt_end_date.setDisplayFormat("dd MMM yyyy")
        self.horizontalLayout.addWidget(self.dt_end_date)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem2)
        self.btn_apply = QtWidgets.QPushButton(self.widget)
        self.btn_apply.setObjectName("btn_apply")
        self.horizontalLayout.addWidget(self.btn_apply)
        self.gridLayout.addLayout(self.horizontalLayout, 0, 0, 1, 1)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        spacerItem3 = QtWidgets.QSpacerItem(613, 13, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout.addItem(spacerItem3)
        self.tbl_log = QtWidgets.QTableView(self.widget)
        self.tbl_log.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.tbl_log.setObjectName("tbl_log")
        self.verticalLayout.addWidget(self.tbl_log)
        self.gridLayout.addLayout(self.verticalLayout, 1, 0, 1, 1)
        self.setCentralWidget(self.centralwidget)

        self.retranslateUi()
        # QtCore.QMetaObject.connectSlotsByName(LogReaderUI)
        self.update_filter_options()

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("LogReaderUI", "TMS Log Reader"))
        self.lbl_filter_option.setText(_translate("LogReaderUI", "Select Option:"))
        self.lbl_start_date.setText(_translate("LogReaderUI", "Select Start Date:"))
        self.lbl_end_date.setText(_translate("LogReaderUI", "Select End Date:"))
        self.btn_apply.setText(_translate("LogReaderUI", "Apply"))

    def update_filter_options(self):
        filter_options = ["-----------", "Automator", "AutoSPL Backup", "POS", "TM"]
        self.cmbbx_filter_option.addItems(filter_options)

    def set_start_and_end_date(self, dates):
        # start_year,start_month, start_date = start_date.split("-")
        # end_year, end_month, end_date = end_date.split("-")
        # print("start_year - {}, start_month - {}, start_date - {}".format(start_year,start_month, start_date))
        # print("end_year - {}, end_month - {}, end_date - {}".format(end_year, end_month, end_date))
        start_date = dates[0]
        end_date = dates[-1]
        start_qdate = QDate.fromString(start_date, "yyyy-mm-dd")
        end_qdate = QDate.fromString(end_date, "yyyy-mm-dd")
        print("qstart_date {}".format(start_qdate))
        print("qend_date {}".format(end_qdate))
        self.dt_start_date.setDate(start_qdate)
        self.dt_start_date.setDateRange(start_qdate, end_qdate)
        self.dt_end_date.setDate(end_qdate)
        self.dt_end_date.setDateRange(start_qdate, end_qdate)

# if __name__ == '__main__':
#     app = QApplication([])
#     ex = LogReaderUI()
#     ex.show()
#     app.exec_()